{"version":3,"file":"mention.directive.d.ts","sources":["mention.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, ElementRef, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { EventEmitter, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { MentionConfig } from \"./mention-config\";\n/**\n * Angular Mentions.\n * https://github.com/dmacfarlane/angular-mentions\n *\n * Copyright (c) 2017 Dan MacFarlane\n */\nexport declare class MentionDirective implements OnChanges {\n    private _element;\n    private _componentResolver;\n    private _viewContainerRef;\n    private mentionItems;\n    set mention(items: any[]);\n    mentionConfig: MentionConfig;\n    private activeConfig;\n    private DEFAULT_CONFIG;\n    mentionListTemplate: TemplateRef<any>;\n    searchTerm: EventEmitter<string>;\n    itemSelected: EventEmitter<any>;\n    opened: EventEmitter<any>;\n    closed: EventEmitter<any>;\n    private triggerChars;\n    private searchString;\n    private startPos;\n    private startNode;\n    private searchList;\n    private searching;\n    private iframe;\n    private lastKeyCode;\n    constructor(_element: ElementRef, _componentResolver: ComponentFactoryResolver, _viewContainerRef: ViewContainerRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    updateConfig(): void;\n    private addConfig;\n    setIframe(iframe: HTMLIFrameElement): void;\n    stopEvent(event: any): void;\n    blurHandler(event: any): void;\n    inputHandler(event: any, nativeElement?: HTMLInputElement): void;\n    keyHandler(event: any, nativeElement?: HTMLInputElement): boolean;\n    startSearch(triggerChar?: string, nativeElement?: HTMLInputElement): void;\n    stopSearch(): void;\n    updateSearchList(): void;\n    showSearchList(nativeElement: HTMLInputElement): void;\n}\n"]}