{"version":3,"sources":["../../projects/angular-mentions/src/lib/mention-utils.ts","../../projects/angular-mentions/src/lib/caret-coords.ts","../../projects/angular-mentions/src/lib/mention-list.component.ts","../../projects/angular-mentions/src/lib/mention.directive.ts","../../projects/angular-mentions/src/lib/mention.module.ts"],"names":["getValue","el","isInputOrTextAreaElement","value","textContent","insertValue","start","end","text","iframe","noRecursion","nodeName","isTextElement","val","setValue","substring","length","setCaretPosition","selObj","getWindowSelection","rangeCount","position","getRangeAt","startOffset","anchorNode","pos","selectionStart","focus","setSelectionRange","range","getDocument","createRange","setStart","collapse","sel","removeAllRanges","addRange","getCaretPosition","slice","selRange","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","toString","contentWindow","document","getSelection","window","getContentEditableCaretCoords","ctx","markerId","Date","getTime","Math","random","substr","doc","prevRange","markerEl","createElement","id","appendChild","createTextNode","insertNode","coordinates","left","top","offsetHeight","element","obj","parent","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","body","scrollTop","scrollLeft","parentNode","localToRelativeCoordinates","removeChild","properties","isBrowser","isFirefox","MentionListComponent","this","labelKey","itemClick","EventEmitter","items","activeIndex","hidden","dropUp","styleOff","coords","offset","prototype","ngAfterContentChecked","itemTemplate","defaultItemTemplate","nativeParentElement","options","Error","debug","querySelector","div","style","computed","getComputedStyle","currentStyle","isInput","whiteSpace","wordWrap","visibility","forEach","prop","boxSizing","height","parseInt","outerHeight","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","targetHeight","lineHeight","scrollHeight","overflowY","overflow","replace","span","backgroundColor","getCaretCoordinates","getBlockCursorDimensions","context","documentElement","pageXOffset","pageYOffset","caretRelativeToView","parentRelativeToContainer","getBoundingClientRect","positionElement","Object","defineProperty","activateNextItem","listEl","list","nativeElement","activeEl","getElementsByClassName","item","nextLiEl","nextSibling","nextLiRect","bottom","clientHeight","max","min","activatePreviousItem","prevLiEl","previousSibling","reset","checkBounds","bounds","width","innerWidth","className","parentStyles","parseFloat","fontSize","Component","args","selector","template","ElementRef","Input","Output","ViewChild","static","MentionDirective","_element","_componentResolver","_viewContainerRef","_this","mentionConfig","DEFAULT_CONFIG","triggerChar","maxItems","allowSpace","returnTrigger","mentionSelect","activeConfig","mentionFilter","searchString","searchStringLowerCase","toLowerCase","filter","e","startsWith","searchTerm","itemSelected","opened","closed","triggerChars","mentionItems","ngOnChanges","changes","updateConfig","config","addConfig","mentions","defaults","assign","map","label","object","disableSort","sort","a","b","localeCompare","updateSearchList","setIframe","stopEvent","event","wasClick","preventDefault","stopPropagation","stopImmediatePropagation","blurHandler","stopSearch","inputHandler","lastKeyCode","data","keyCode","charCodeAt","keyHandler","inputEvent","isComposing","charPressed","key","charCode","which","shiftKey","String","fromCharCode","startPos","startNode","searching","showSearchList","emit","searchList","metaKey","altKey","ctrlKey","activeItem","evt","createEvent","initEvent","dispatchEvent","mention","startSearch","matches","objects","disableSearch","componentFactory","resolveComponentFactory","componentRef","createComponent","instance","mentionListTemplate","subscribe","fakeKeydown","disableStyle","requestAnimationFrame","Directive","host","(keydown)","(input)","(blur)","autocomplete","ComponentFactoryResolver","ViewContainerRef","NgModule","declarations","imports","CommonModule","exports","entryComponents"],"mappings":"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","sourcesContent":["// DOM element manipulation functions...\n//\n\nfunction setValue(el: HTMLInputElement, value: any) {\n  //console.log(\"setValue\", el.nodeName, \"[\"+value+\"]\");\n  if (isInputOrTextAreaElement(el)) {\n    el.value = value;\n  }\n  else {\n    el.textContent = value;\n  }\n}\n\nexport function getValue(el: HTMLInputElement) {\n  return isInputOrTextAreaElement(el) ? el.value : el.textContent;\n}\n\nexport function insertValue(\n  el: HTMLInputElement,\n  start: number,\n  end: number,\n  text: string,\n  iframe: HTMLIFrameElement,\n  noRecursion: boolean = false\n) {\n  //console.log(\"insertValue\", el.nodeName, start, end, \"[\"+text+\"]\", el);\n  if (isTextElement(el)) {\n    let val = getValue(el);\n    setValue(el, val.substring(0, start) + text + val.substring(end, val.length));\n    setCaretPosition(el, start + text.length, iframe);\n  }\n  else if (!noRecursion) {\n    let selObj: Selection = getWindowSelection(iframe);\n    if (selObj && selObj.rangeCount > 0) {\n      var selRange = selObj.getRangeAt(0);\n      var position = selRange.startOffset;\n      var anchorNode = selObj.anchorNode;\n      // if (text.endsWith(' ')) {\n      //   text = text.substring(0, text.length-1) + '\\xA0';\n      // }\n      insertValue(<HTMLInputElement>anchorNode, position - (end - start), position, text, iframe, true);\n    }\n  }\n}\n\nexport function isInputOrTextAreaElement(el: HTMLElement): boolean {\n  return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA');\n};\n\nexport function isTextElement(el: HTMLElement): boolean {\n  return el != null && (el.nodeName == 'INPUT' || el.nodeName == 'TEXTAREA' || el.nodeName == '#text');\n};\n\nexport function setCaretPosition(el: HTMLInputElement, pos: number, iframe: HTMLIFrameElement = null) {\n  //console.log(\"setCaretPosition\", pos, el, iframe==null);\n  if (isInputOrTextAreaElement(el) && el.selectionStart) {\n    el.focus();\n    el.setSelectionRange(pos, pos);\n  }\n  else {\n    let range = getDocument(iframe).createRange();\n    range.setStart(el, pos);\n    range.collapse(true);\n    let sel = getWindowSelection(iframe);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\n\nexport function getCaretPosition(el: HTMLInputElement, iframe: HTMLIFrameElement = null) {\n  //console.log(\"getCaretPosition\", el);\n  if (isInputOrTextAreaElement(el)) {\n    var val = el.value;\n    return val.slice(0, el.selectionStart).length;\n  }\n  else {\n    var selObj = getWindowSelection(iframe); //window.getSelection();\n    if (selObj.rangeCount > 0) {\n      var selRange = selObj.getRangeAt(0);\n      var preCaretRange = selRange.cloneRange();\n      preCaretRange.selectNodeContents(el);\n      preCaretRange.setEnd(selRange.endContainer, selRange.endOffset);\n      var position = preCaretRange.toString().length;\n      return position;\n    }\n  }\n}\n\n// Based on ment.io functions...\n//\n\nfunction getDocument(iframe: HTMLIFrameElement) {\n  if (!iframe) {\n    return document;\n  } else {\n    return iframe.contentWindow.document;\n  }\n}\n\nfunction getWindowSelection(iframe: HTMLIFrameElement): Selection {\n  if (!iframe) {\n    return window.getSelection();\n  } else {\n    return iframe.contentWindow.getSelection();\n  }\n}\n\nexport function getContentEditableCaretCoords(ctx: { iframe: HTMLIFrameElement, parent?: Element }) {\n  let markerTextChar = '\\ufeff';\n  let markerId = 'sel_' + new Date().getTime() + '_' + Math.random().toString().substr(2);\n  let doc = getDocument(ctx ? ctx.iframe : null);\n  let sel = getWindowSelection(ctx ? ctx.iframe : null);\n  let prevRange = sel.getRangeAt(0);\n\n  // create new range and set postion using prevRange\n  let range = doc.createRange();\n  range.setStart(sel.anchorNode, prevRange.startOffset);\n  range.setEnd(sel.anchorNode, prevRange.startOffset);\n  range.collapse(false);\n\n  // Create the marker element containing a single invisible character\n  // using DOM methods and insert it at the position in the range\n  let markerEl = doc.createElement('span');\n  markerEl.id = markerId;\n  markerEl.appendChild(doc.createTextNode(markerTextChar));\n  range.insertNode(markerEl);\n  sel.removeAllRanges();\n  sel.addRange(prevRange);\n\n  let coordinates = {\n    left: 0,\n    top: markerEl.offsetHeight\n  };\n\n  localToRelativeCoordinates(ctx, markerEl, coordinates);\n\n  markerEl.parentNode.removeChild(markerEl);\n  return coordinates;\n}\n\nfunction localToRelativeCoordinates(\n  ctx: { iframe: HTMLIFrameElement, parent?: Element },\n  element: Element,\n  coordinates: { top: number; left: number }\n) {\n  let obj = <HTMLElement>element;\n  let iframe = ctx ? ctx.iframe : null;\n  while (obj) {\n    if (ctx.parent != null && ctx.parent == obj) {\n      break;\n    }\n    coordinates.left += obj.offsetLeft + obj.clientLeft;\n    coordinates.top += obj.offsetTop + obj.clientTop;\n    obj = <HTMLElement>obj.offsetParent;\n    if (!obj && iframe) {\n      obj = iframe;\n      iframe = null;\n    }\n  }\n  obj = <HTMLElement>element;\n  iframe = ctx ? ctx.iframe : null;\n  while (obj !== getDocument(null).body && obj != null) {\n    if (ctx.parent != null && ctx.parent == obj) {\n      break;\n    }\n    if (obj.scrollTop && obj.scrollTop > 0) {\n      coordinates.top -= obj.scrollTop;\n    }\n    if (obj.scrollLeft && obj.scrollLeft > 0) {\n      coordinates.left -= obj.scrollLeft;\n    }\n    obj = <HTMLElement>obj.parentNode;\n    if (!obj && iframe) {\n      obj = iframe;\n      iframe = null;\n    }\n  }\n}\n","/* From: https://github.com/component/textarea-caret-position */\n/* jshint browser: true */\n\n// (function () {\n\n  // We'll copy the properties below into the mirror div.\n  // Note that some browsers, such as Firefox, do not concatenate properties\n  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n  // so we have to list every single property explicitly.\n  var properties = [\n    'direction',  // RTL support\n    'boxSizing',\n    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n    'height',\n    'overflowX',\n    'overflowY',  // copy the scrollbar for IE\n\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderStyle',\n\n    'paddingTop',\n    'paddingRight',\n    'paddingBottom',\n    'paddingLeft',\n\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'fontStretch',\n    'fontSize',\n    'fontSizeAdjust',\n    'lineHeight',\n    'fontFamily',\n\n    'textAlign',\n    'textTransform',\n    'textIndent',\n    'textDecoration',  // might not make a difference, but better be safe\n\n    'letterSpacing',\n    'wordSpacing',\n\n    'tabSize',\n    'MozTabSize'\n\n  ];\n\n  var isBrowser = (typeof window !== 'undefined');\n  var isFirefox = (isBrowser && window['mozInnerScreenX'] != null);\n\n  export function getCaretCoordinates(element, position, options) {\n    if (!isBrowser) {\n      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n    }\n\n    var debug = options && options.debug || false;\n    if (debug) {\n      var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n      if (el) el.parentNode.removeChild(el);\n    }\n\n    // The mirror div will replicate the textarea's style\n    var div = document.createElement('div');\n    div.id = 'input-textarea-caret-position-mirror-div';\n    document.body.appendChild(div);\n\n    var style = div.style;\n    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n    var isInput = element.nodeName === 'INPUT';\n\n    // Default textarea styles\n    style.whiteSpace = 'pre-wrap';\n    if (!isInput)\n      style.wordWrap = 'break-word';  // only for textarea-s\n\n    // Position off-screen\n    style.position = 'absolute';  // required to return coordinates properly\n    if (!debug)\n      style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n    // Transfer the element's properties to the div\n    properties.forEach(function (prop) {\n      if (isInput && prop === 'lineHeight') {\n        // Special case for <input>s because text is rendered centered and line height may be != height\n        if (computed.boxSizing === \"border-box\") {\n          var height = parseInt(computed.height);\n          var outerHeight =\n            parseInt(computed.paddingTop) +\n            parseInt(computed.paddingBottom) +\n            parseInt(computed.borderTopWidth) +\n            parseInt(computed.borderBottomWidth);\n          var targetHeight = outerHeight + parseInt(computed.lineHeight);\n          if (height > targetHeight) {\n            style.lineHeight = height - outerHeight + \"px\";\n          } else if (height === targetHeight) {\n            style.lineHeight = computed.lineHeight;\n          } else {\n            style.lineHeight = '0';\n          }\n        } else {\n          style.lineHeight = computed.height;\n        }\n      } else {\n        style[prop] = computed[prop];\n      }\n    });\n\n    if (isFirefox) {\n      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n      if (element.scrollHeight > parseInt(computed.height))\n        style.overflowY = 'scroll';\n    } else {\n      style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n    }\n\n    div.textContent = element.value.substring(0, position);\n    // The second special handling for input type=\"text\" vs textarea:\n    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n    if (isInput)\n      div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n    var span = document.createElement('span');\n    // Wrapping must be replicated *exactly*, including when a long word gets\n    // onto the next line, with whitespace at the end of the line before (#7).\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\n    // textarea's content into the <span> created at the caret position.\n    // For inputs, just '.' would be enough, but no need to bother.\n    span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n    div.appendChild(span);\n\n    var coordinates = {\n      top: span.offsetTop + parseInt(computed['borderTopWidth']),\n      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n      height: parseInt(computed['lineHeight'])\n    };\n\n    if (debug) {\n      span.style.backgroundColor = '#aaa';\n    } else {\n      document.body.removeChild(div);\n    }\n\n    return coordinates;\n  }\n\n  // if (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  //   module.exports = getCaretCoordinates;\n  // } else if(isBrowser) {\n  //   window.getCaretCoordinates = getCaretCoordinates;\n  // }\n\n  // }());","import {\n  Component, ElementRef, Output, EventEmitter, ViewChild, Input, TemplateRef, AfterContentChecked\n} from '@angular/core';\n\nimport { isInputOrTextAreaElement, getContentEditableCaretCoords } from './mention-utils';\nimport { getCaretCoordinates } from './caret-coords';\n\n/**\n * Angular Mentions.\n * https://github.com/dmacfarlane/angular-mentions\n *\n * Copyright (c) 2016 Dan MacFarlane\n */\n@Component({\n  selector: 'mention-list',\n  styleUrls: ['./mention-list.component.scss'],\n  template: `\n    <ng-template #defaultItemTemplate let-item=\"item\">\n      {{item[labelKey]}}\n    </ng-template>\n    <ul #list [hidden]=\"hidden\" class=\"dropdown-menu scrollable-menu\"\n      [class.mention-menu]=\"!styleOff\" [class.mention-dropdown]=\"!styleOff && dropUp\">\n      <li *ngFor=\"let item of items; let i = index\"\n        [class.active]=\"activeIndex==i\" [class.mention-active]=\"!styleOff && activeIndex==i\">\n        <a class=\"dropdown-item\" [class.mention-item]=\"!styleOff\"\n          (mousedown)=\"activeIndex=i;itemClick.emit();$event.preventDefault()\">\n          <ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{'item':item}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    `\n})\nexport class MentionListComponent implements AfterContentChecked {\n  @Input() labelKey: string = 'label';\n  @Input() itemTemplate: TemplateRef<any>;\n  @Output() itemClick = new EventEmitter();\n  @ViewChild('list', { static: true }) list: ElementRef;\n  @ViewChild('defaultItemTemplate', { static: true }) defaultItemTemplate: TemplateRef<any>;\n  items = [];\n  activeIndex: number = 0;\n  hidden: boolean = false;\n  dropUp: boolean = false;\n  styleOff: boolean = false;\n  private coords: {top:number, left:number} = {top:0, left:0};\n  private offset: number = 0;\n  constructor(private element: ElementRef) {}\n\n  ngAfterContentChecked() {\n    if (!this.itemTemplate) {\n      this.itemTemplate = this.defaultItemTemplate;\n    }\n  }\n\n  // lots of confusion here between relative coordinates and containers\n  position(nativeParentElement: HTMLInputElement, iframe: HTMLIFrameElement = null) {\n    if (isInputOrTextAreaElement(nativeParentElement)) {\n      // parent elements need to have postition:relative for this to work correctly?\n      this.coords = getCaretCoordinates(nativeParentElement, nativeParentElement.selectionStart, null);\n      this.coords.top = nativeParentElement.offsetTop + this.coords.top - nativeParentElement.scrollTop;\n      this.coords.left = nativeParentElement.offsetLeft + this.coords.left - nativeParentElement.scrollLeft;\n      // getCretCoordinates() for text/input elements needs an additional offset to position the list correctly\n      this.offset = this.getBlockCursorDimensions(nativeParentElement).height;\n    }\n    else if (iframe) {\n      let context: { iframe: HTMLIFrameElement, parent: Element } = { iframe: iframe, parent: iframe.offsetParent };\n      this.coords = getContentEditableCaretCoords(context);\n    }\n    else {\n      let doc = document.documentElement;\n      let scrollLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n      let scrollTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n      // bounding rectangles are relative to view, offsets are relative to container?\n      let caretRelativeToView = getContentEditableCaretCoords({ iframe: iframe });\n      let parentRelativeToContainer: ClientRect = nativeParentElement.getBoundingClientRect();\n      this.coords.top = caretRelativeToView.top - parentRelativeToContainer.top + nativeParentElement.offsetTop - scrollTop;\n      this.coords.left = caretRelativeToView.left - parentRelativeToContainer.left + nativeParentElement.offsetLeft - scrollLeft;\n    }\n    // set the default/inital position\n    this.positionElement();\n  }\n\n  get activeItem() {\n    return this.items[this.activeIndex];\n  }\n\n  activateNextItem() {\n    // adjust scrollable-menu offset if the next item is out of view\n    let listEl: HTMLElement = this.list.nativeElement;\n    let activeEl = listEl.getElementsByClassName('active').item(0);\n    if (activeEl) {\n      let nextLiEl: HTMLElement = <HTMLElement> activeEl.nextSibling;\n      if (nextLiEl && nextLiEl.nodeName == \"LI\") {\n        let nextLiRect: ClientRect = nextLiEl.getBoundingClientRect();\n        if (nextLiRect.bottom > listEl.getBoundingClientRect().bottom) {\n          listEl.scrollTop = nextLiEl.offsetTop + nextLiRect.height - listEl.clientHeight;\n        }\n      }\n    }\n    // select the next item\n    this.activeIndex = Math.max(Math.min(this.activeIndex + 1, this.items.length - 1), 0);\n  }\n\n  activatePreviousItem() {\n    // adjust the scrollable-menu offset if the previous item is out of view\n    let listEl: HTMLElement = this.list.nativeElement;\n    let activeEl = listEl.getElementsByClassName('active').item(0);\n    if (activeEl) {\n      let prevLiEl: HTMLElement = <HTMLElement> activeEl.previousSibling;\n      if (prevLiEl && prevLiEl.nodeName == \"LI\") {\n        let prevLiRect: ClientRect = prevLiEl.getBoundingClientRect();\n        if (prevLiRect.top < listEl.getBoundingClientRect().top) {\n          listEl.scrollTop = prevLiEl.offsetTop;\n        }\n      }\n    }\n    // select the previous item\n    this.activeIndex = Math.max(Math.min(this.activeIndex - 1, this.items.length - 1), 0);\n  }\n\n  // reset for a new mention search\n  reset() {\n    this.list.nativeElement.scrollTop = 0;\n    this.checkBounds();\n  }\n\n  // final positioning is done after the list is shown (and the height and width are known)\n  // ensure it's in the page bounds\n  private checkBounds() {\n    let left = this.coords.left, top = this.coords.top, dropUp = this.dropUp;\n    const bounds: ClientRect = this.list.nativeElement.getBoundingClientRect();\n    // if off right of page, align right\n    if (bounds.left + bounds.width > window.innerWidth) {\n      left -= bounds.left + bounds.width - window.innerWidth + 10;\n    }\n    // if more than half off the bottom of the page, force dropUp\n    // if ((bounds.top+bounds.height/2)>window.innerHeight) {\n    //   dropUp = true;\n    // }\n    // if top is off page, disable dropUp\n    if (bounds.top<0) {\n      dropUp = false;\n    }\n    // set the revised/final position\n    this.positionElement(left, top, dropUp);\n  }\n\n  private positionElement(left:number=this.coords.left, top:number=this.coords.top, dropUp:boolean=this.dropUp) {\n    const el: HTMLElement = this.element.nativeElement;\n    top += dropUp ? 0 : this.offset; // top of list is next line\n    el.className = dropUp ? 'dropup' : null;\n    el.style.position = \"absolute\";\n    el.style.left = left + 'px';\n    el.style.top = top + 'px';\n  }\n\n  private getBlockCursorDimensions(nativeParentElement: HTMLInputElement) {\n    const parentStyles = window.getComputedStyle(nativeParentElement);\n    return {\n      height: parseFloat(parentStyles.lineHeight),\n      width: parseFloat(parentStyles.fontSize)\n    };\n  }\n}\n","import { ComponentFactoryResolver, Directive, ElementRef, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { getCaretPosition, getValue, insertValue, setCaretPosition } from './mention-utils';\n\nimport { MentionConfig } from \"./mention-config\";\nimport { MentionListComponent } from './mention-list.component';\n\nconst KEY_BACKSPACE = 8;\nconst KEY_TAB = 9;\nconst KEY_ENTER = 13;\nconst KEY_SHIFT = 16;\nconst KEY_ESCAPE = 27;\nconst KEY_SPACE = 32;\nconst KEY_LEFT = 37;\nconst KEY_UP = 38;\nconst KEY_RIGHT = 39;\nconst KEY_DOWN = 40;\nconst KEY_BUFFERED = 229;\n\n/**\n * Angular Mentions.\n * https://github.com/dmacfarlane/angular-mentions\n *\n * Copyright (c) 2017 Dan MacFarlane\n */\n@Directive({\n  selector: '[mention], [mentionConfig]',\n  host: {\n    '(keydown)': 'keyHandler($event)',\n    '(input)': 'inputHandler($event)',\n    '(blur)': 'blurHandler($event)',\n    'autocomplete': 'off'\n  }\n})\nexport class MentionDirective implements OnChanges {\n\n  // stores the items passed to the mentions directive and used to populate the root items in mentionConfig\n  private mentionItems: any[];\n\n  @Input('mention') set mention(items: any[]) {\n    this.mentionItems = items;\n  }\n\n  // the provided configuration object\n  @Input() mentionConfig: MentionConfig = { items: [] };\n\n  private activeConfig: MentionConfig;\n\n  private DEFAULT_CONFIG: MentionConfig = {\n    items: [],\n    triggerChar: '@',\n    labelKey: 'label',\n    maxItems: -1,\n    allowSpace: false,\n    returnTrigger: false,\n    mentionSelect: (item: any, triggerChar?: string) => {\n      return this.activeConfig.triggerChar + item[this.activeConfig.labelKey];\n    },\n    mentionFilter: (searchString: string, items: any[]) => {\n      const searchStringLowerCase = searchString.toLowerCase();\n      return items.filter(e => e[this.activeConfig.labelKey].toLowerCase().startsWith(searchStringLowerCase));\n    }\n  }\n\n  // template to use for rendering list items\n  @Input() mentionListTemplate: TemplateRef<any>;\n\n  // event emitted whenever the search term changes\n  @Output() searchTerm = new EventEmitter<string>();\n\n  // event emitted when an item is selected\n  @Output() itemSelected = new EventEmitter<any>();\n\n  // event emitted whenever the mention list is opened or closed\n  @Output() opened = new EventEmitter();\n  @Output() closed = new EventEmitter();\n\n  private triggerChars: { [key: string]: MentionConfig } = {};\n\n  private searchString: string;\n  private startPos: number;\n  private startNode;\n  private searchList: MentionListComponent;\n  private searching: boolean;\n  private iframe: any; // optional\n  private lastKeyCode: number;\n\n  constructor(\n    private _element: ElementRef,\n    private _componentResolver: ComponentFactoryResolver,\n    private _viewContainerRef: ViewContainerRef\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // console.log('config change', changes);\n    if (changes['mention'] || changes['mentionConfig']) {\n      this.updateConfig();\n    }\n  }\n\n  public updateConfig() {\n    let config = this.mentionConfig;\n    this.triggerChars = {};\n    // use items from directive if they have been set\n    if (this.mentionItems) {\n      config.items = this.mentionItems;\n    }\n    this.addConfig(config);\n    // nested configs\n    if (config.mentions) {\n      config.mentions.forEach(config => this.addConfig(config));\n    }\n  }\n\n  // add configuration for a trigger char\n  private addConfig(config: MentionConfig) {\n    // defaults\n    let defaults = Object.assign({}, this.DEFAULT_CONFIG);\n    config = Object.assign(defaults, config);\n    // items\n    let items = config.items;\n    if (items && items.length > 0) {\n      // convert strings to objects\n      if (typeof items[0] == 'string') {\n        items = items.map((label) => {\n          let object = {};\n          object[config.labelKey] = label;\n          return object;\n        });\n      }\n      if (config.labelKey) {\n        // remove items without an labelKey (as it's required to filter the list)\n        items = items.filter(e => e[config.labelKey]);\n        if (!config.disableSort) {\n          items.sort((a, b) => a[config.labelKey].localeCompare(b[config.labelKey]));\n        }\n      }\n    }\n    config.items = items;\n\n    // add the config\n    this.triggerChars[config.triggerChar] = config;\n\n    // for async update while menu/search is active\n    if (this.activeConfig && this.activeConfig.triggerChar == config.triggerChar) {\n      this.activeConfig = config;\n      this.updateSearchList();\n    }\n  }\n\n  setIframe(iframe: HTMLIFrameElement) {\n    this.iframe = iframe;\n  }\n\n  stopEvent(event: any) {\n    //if (event instanceof KeyboardEvent) { // does not work for iframe\n    if (!event.wasClick) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n    }\n  }\n\n  blurHandler(event: any) {\n    this.stopEvent(event);\n    this.stopSearch();\n  }\n\n  inputHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\n    if (this.lastKeyCode === KEY_BUFFERED && event.data) {\n      let keyCode = event.data.charCodeAt(0);\n      this.keyHandler({ keyCode, inputEvent: true }, nativeElement);\n    }\n  }\n\n  // @param nativeElement is the alternative text element in an iframe scenario\n  keyHandler(event: any, nativeElement: HTMLInputElement = this._element.nativeElement) {\n    this.lastKeyCode = event.keyCode;\n\n    if (event.isComposing || event.keyCode === KEY_BUFFERED) {\n      return;\n    }\n\n    let val: string = getValue(nativeElement);\n    let pos = getCaretPosition(nativeElement, this.iframe);\n    let charPressed = event.key;\n    if (!charPressed) {\n      let charCode = event.which || event.keyCode;\n      if (!event.shiftKey && (charCode >= 65 && charCode <= 90)) {\n        charPressed = String.fromCharCode(charCode + 32);\n      }\n      // else if (event.shiftKey && charCode === KEY_2) {\n      //   charPressed = this.config.triggerChar;\n      // }\n      else {\n        // TODO (dmacfarlane) fix this for non-alpha keys\n        // http://stackoverflow.com/questions/2220196/how-to-decode-character-pressed-from-jquerys-keydowns-event-handler?lq=1\n        charPressed = String.fromCharCode(event.which || event.keyCode);\n      }\n    }\n    if (event.keyCode == KEY_ENTER && event.wasClick && pos < this.startPos) {\n      // put caret back in position prior to contenteditable menu click\n      pos = this.startNode.length;\n      setCaretPosition(this.startNode, pos, this.iframe);\n    }\n    //console.log(\"keyHandler\", this.startPos, pos, val, charPressed, event);\n\n    let config = this.triggerChars[charPressed];\n    if (config) {\n      this.activeConfig = config;\n      this.startPos = event.inputEvent ? pos - 1 : pos;\n      this.startNode = (this.iframe ? this.iframe.contentWindow.getSelection() : window.getSelection()).anchorNode;\n      this.searching = true;\n      this.searchString = null;\n      this.showSearchList(nativeElement);\n      this.updateSearchList();\n\n      if (config.returnTrigger) {\n        this.searchTerm.emit(config.triggerChar);\n      }\n\n    }\n    else if (this.startPos >= 0 && this.searching) {\n      if (pos <= this.startPos) {\n        this.searchList.hidden = true;\n      }\n      // ignore shift when pressed alone, but not when used with another key\n      else if (event.keyCode !== KEY_SHIFT &&\n        !event.metaKey &&\n        !event.altKey &&\n        !event.ctrlKey &&\n        pos > this.startPos\n      ) {\n        if (!this.activeConfig.allowSpace && event.keyCode === KEY_SPACE) {\n          this.startPos = -1;\n        }\n        else if (event.keyCode === KEY_BACKSPACE && pos > 0) {\n          pos--;\n          if (pos == this.startPos) {\n            this.stopSearch();\n          }\n        }\n        else if (!this.searchList.hidden) {\n          if (event.keyCode === KEY_TAB || event.keyCode === KEY_ENTER) {\n            this.stopEvent(event);\n            // emit the selected list item\n            this.itemSelected.emit(this.searchList.activeItem);\n            // optional function to format the selected item before inserting the text\n            const text = this.activeConfig.mentionSelect(this.searchList.activeItem, this.activeConfig.triggerChar);\n            // value is inserted without a trailing space for consistency\n            // between element types (div and iframe do not preserve the space)\n            insertValue(nativeElement, this.startPos, pos, text, this.iframe);\n            // fire input event so angular bindings are updated\n            if (\"createEvent\" in document) {\n              let evt = document.createEvent(\"HTMLEvents\");\n              if (this.iframe) {\n                // a 'change' event is required to trigger tinymce updates\n                evt.initEvent(\"change\", true, false);\n              }\n              else {\n                evt.initEvent(\"input\", true, false);\n              }\n              // this seems backwards, but fire the event from this elements nativeElement (not the\n              // one provided that may be in an iframe, as it won't be propogate)\n              this._element.nativeElement.dispatchEvent(evt);\n            }\n            this.startPos = -1;\n            this.stopSearch();\n            return false;\n          }\n          else if (event.keyCode === KEY_ESCAPE) {\n            this.stopEvent(event);\n            this.stopSearch();\n            return false;\n          }\n          else if (event.keyCode === KEY_DOWN) {\n            this.stopEvent(event);\n            this.searchList.activateNextItem();\n            return false;\n          }\n          else if (event.keyCode === KEY_UP) {\n            this.stopEvent(event);\n            this.searchList.activatePreviousItem();\n            return false;\n          }\n        }\n\n        if (charPressed.length!=1 && event.keyCode!=KEY_BACKSPACE) {\n          this.stopEvent(event);\n          return false;\n        }\n        else if (this.searching) {\n          let mention = val.substring(this.startPos + 1, pos);\n          if (event.keyCode !== KEY_BACKSPACE && !event.inputEvent) {\n            mention += charPressed;\n          }\n          this.searchString = mention;\n          if (this.activeConfig.returnTrigger) {\n            const triggerChar = (this.searchString || event.keyCode === KEY_BACKSPACE) ? val.substring(this.startPos, this.startPos + 1) : '';\n            this.searchTerm.emit(triggerChar + this.searchString);\n          } \n          else {\n            this.searchTerm.emit(this.searchString);\n          }\n          this.updateSearchList();\n        }\n      }\n    }\n  }\n\n  // exposed for external calls to open the mention list, e.g. by clicking a button\n  public startSearch(triggerChar?: string, nativeElement: HTMLInputElement = this._element.nativeElement) {\n    triggerChar = triggerChar || this.mentionConfig.triggerChar || this.DEFAULT_CONFIG.triggerChar;\n    const pos = getCaretPosition(nativeElement, this.iframe);\n    insertValue(nativeElement, pos, pos, triggerChar, this.iframe);\n    this.keyHandler({ key: triggerChar, inputEvent: true }, nativeElement);\n  }\n\n  stopSearch() {\n    if (this.searchList && !this.searchList.hidden) {\n      this.searchList.hidden = true;\n      this.closed.emit();\n    }\n    this.activeConfig = null;\n    this.searching = false;\n  }\n\n  updateSearchList() {\n    let matches: any[] = [];\n    if (this.activeConfig && this.activeConfig.items) {\n      let objects = this.activeConfig.items;\n      // disabling the search relies on the async operation to do the filtering\n      if (!this.activeConfig.disableSearch && this.searchString && this.activeConfig.labelKey) {\n        if (this.activeConfig.mentionFilter) {\n          objects = this.activeConfig.mentionFilter(this.searchString, objects);\n        }\n      }\n      matches = objects;\n      if (this.activeConfig.maxItems > 0) {\n        matches = matches.slice(0, this.activeConfig.maxItems);\n      }\n    }\n    // update the search list\n    if (this.searchList) {\n      this.searchList.items = matches;\n      this.searchList.hidden = matches.length == 0;\n    }\n  }\n\n  showSearchList(nativeElement: HTMLInputElement) {\n    this.opened.emit();\n\n    if (this.searchList == null) {\n      let componentFactory = this._componentResolver.resolveComponentFactory(MentionListComponent);\n      let componentRef = this._viewContainerRef.createComponent(componentFactory);\n      this.searchList = componentRef.instance;\n      this.searchList.itemTemplate = this.mentionListTemplate;\n      componentRef.instance['itemClick'].subscribe(() => {\n        nativeElement.focus();\n        let fakeKeydown = { key: 'Enter', keyCode: KEY_ENTER, wasClick: true };\n        this.keyHandler(fakeKeydown, nativeElement);\n      });\n    }\n    this.searchList.labelKey = this.activeConfig.labelKey;\n    this.searchList.dropUp = this.activeConfig.dropUp;\n    this.searchList.styleOff = this.mentionConfig.disableStyle;\n    this.searchList.activeIndex = 0;\n    this.searchList.position(nativeElement, this.iframe);\n    window.requestAnimationFrame(() => this.searchList.reset());\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MentionDirective } from './mention.directive';\nimport { MentionListComponent } from './mention-list.component';\n\n@NgModule({\n  declarations: [\n    MentionDirective,\n    MentionListComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MentionDirective\n  ],\n  entryComponents: [\n    MentionListComponent\n  ]\n})\nexport class MentionModule { }\n"]}